/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RestoreTasksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RestoreTasksApiTests
    {
        private RestoreTasksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RestoreTasksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RestoreTasksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RestoreTasksApi
            //Assert.IsInstanceOfType(typeof(RestoreTasksApi), instance, "instance is a RestoreTasksApi");
        }

        
        /// <summary>
        /// Test CancelRestoreTask
        /// </summary>
        [Test]
        public void CancelRestoreTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //instance.CancelRestoreTask(id);
            
        }
        
        /// <summary>
        /// Test CreateApplicationsCloneTask
        /// </summary>
        [Test]
        public void CreateApplicationsCloneTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicationsRestoreTaskRequest body = null;
            //var response = instance.CreateApplicationsCloneTask(body);
            //Assert.IsInstanceOf<RestoreTask> (response, "response is RestoreTask");
        }
        
        /// <summary>
        /// Test CreateApplicationsRecoverTask
        /// </summary>
        [Test]
        public void CreateApplicationsRecoverTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplicationsRestoreTaskRequest body = null;
            //var response = instance.CreateApplicationsRecoverTask(body);
            //Assert.IsInstanceOf<RestoreTask> (response, "response is RestoreTask");
        }
        
        /// <summary>
        /// Test CreateCloneTask
        /// </summary>
        [Test]
        public void CreateCloneTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CloneTaskRequest body = null;
            //var response = instance.CreateCloneTask(body);
            //Assert.IsInstanceOf<RestoreTask> (response, "response is RestoreTask");
        }
        
        /// <summary>
        /// Test CreateRecoverTask
        /// </summary>
        [Test]
        public void CreateRecoverTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecoverTaskRequest body = null;
            //var response = instance.CreateRecoverTask(body);
            //Assert.IsInstanceOf<RestoreTask> (response, "response is RestoreTask");
        }
        
        /// <summary>
        /// Test CreateRestoreFilesTask
        /// </summary>
        [Test]
        public void CreateRestoreFilesTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RestoreFilesTaskRequest body = null;
            //var response = instance.CreateRestoreFilesTask(body);
            //Assert.IsInstanceOf<RestoreTask> (response, "response is RestoreTask");
        }
        
        /// <summary>
        /// Test GetFileSnapshotsInformation
        /// </summary>
        [Test]
        public void GetFileSnapshotsInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? jobId = null;
            //long? clusterId = null;
            //long? clusterIncarnationId = null;
            //long? sourceId = null;
            //string filename = null;
            //var response = instance.GetFileSnapshotsInformation(jobId, clusterId, clusterIncarnationId, sourceId, filename);
            //Assert.IsInstanceOf<List<FileSnapshotInformation>> (response, "response is List<FileSnapshotInformation>");
        }
        
        /// <summary>
        /// Test GetRestoreTaskById
        /// </summary>
        [Test]
        public void GetRestoreTaskByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetRestoreTaskById(id);
            //Assert.IsInstanceOf<RestoreTask> (response, "response is RestoreTask");
        }
        
        /// <summary>
        /// Test GetRestoreTasks
        /// </summary>
        [Test]
        public void GetRestoreTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<long?> taskIds = null;
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //long? pageCount = null;
            //List<string> taskTypes = null;
            //var response = instance.GetRestoreTasks(taskIds, startTimeUsecs, endTimeUsecs, pageCount, taskTypes);
            //Assert.IsInstanceOf<List<RestoreTask>> (response, "response is List<RestoreTask>");
        }
        
        /// <summary>
        /// Test GetVmVolumesInformation
        /// </summary>
        [Test]
        public void GetVmVolumesInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? attemptNumber = null;
            //long? sourceId = null;
            //bool? supportedVolumesOnly = null;
            //long? jobId = null;
            //long? clusterIncarnationId = null;
            //long? startedTimeUsecs = null;
            //long? originalJobId = null;
            //long? clusterId = null;
            //long? jobRunId = null;
            //var response = instance.GetVmVolumesInformation(attemptNumber, sourceId, supportedVolumesOnly, jobId, clusterIncarnationId, startedTimeUsecs, originalJobId, clusterId, jobRunId);
            //Assert.IsInstanceOf<List<VmVolumesInformation>> (response, "response is List<VmVolumesInformation>");
        }
        
        /// <summary>
        /// Test SearchObjects
        /// </summary>
        [Test]
        public void SearchObjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<long?> jobIds = null;
            //List<long?> viewBoxIds = null;
            //List<string> environments = null;
            //long? startIndex = null;
            //List<string> operatingSystems = null;
            //string application = null;
            //long? ownerEntityId = null;
            //string search = null;
            //List<long?> registeredSourceIds = null;
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //long? pageCount = null;
            //var response = instance.SearchObjects(jobIds, viewBoxIds, environments, startIndex, operatingSystems, application, ownerEntityId, search, registeredSourceIds, startTimeUsecs, endTimeUsecs, pageCount);
            //Assert.IsInstanceOf<ObjectSearchResults> (response, "response is ObjectSearchResults");
        }
        
        /// <summary>
        /// Test SearchRestoredFiles
        /// </summary>
        [Test]
        public void SearchRestoredFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //List<long?> sourceIds = null;
            //long? startIndex = null;
            //long? pageCount = null;
            //bool? folderOnly = null;
            //string search = null;
            //List<long?> jobIds = null;
            //List<long?> registeredSourceIds = null;
            //List<long?> viewBoxIds = null;
            //List<string> environments = null;
            //var response = instance.SearchRestoredFiles(startTimeUsecs, endTimeUsecs, sourceIds, startIndex, pageCount, folderOnly, search, jobIds, registeredSourceIds, viewBoxIds, environments);
            //Assert.IsInstanceOf<FileSearchResults> (response, "response is FileSearchResults");
        }
        
    }

}
