/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ProtectionJobsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProtectionJobsApiTests
    {
        private ProtectionJobsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProtectionJobsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProtectionJobsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProtectionJobsApi
            //Assert.IsInstanceOfType(typeof(ProtectionJobsApi), instance, "instance is a ProtectionJobsApi");
        }

        
        /// <summary>
        /// Test ChangeProtectionJobState
        /// </summary>
        [Test]
        public void ChangeProtectionJobStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //ChangeProtectionJobStateParam body = null;
            //instance.ChangeProtectionJobState(id, body);
            
        }
        
        /// <summary>
        /// Test CreateProtectionJob
        /// </summary>
        [Test]
        public void CreateProtectionJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProtectionJobRequestBody body = null;
            //var response = instance.CreateProtectionJob(body);
            //Assert.IsInstanceOf<ProtectionJob> (response, "response is ProtectionJob");
        }
        
        /// <summary>
        /// Test DeleteProtectionJob
        /// </summary>
        [Test]
        public void DeleteProtectionJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //bool? deleteSnapshots = null;
            //instance.DeleteProtectionJob(id, deleteSnapshots);
            
        }
        
        /// <summary>
        /// Test GetProtectionJobById
        /// </summary>
        [Test]
        public void GetProtectionJobByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetProtectionJobById(id);
            //Assert.IsInstanceOf<ProtectionJob> (response, "response is ProtectionJob");
        }
        
        /// <summary>
        /// Test GetProtectionJobs
        /// </summary>
        [Test]
        public void GetProtectionJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> policyIds = null;
            //List<string> environments = null;
            //bool? isActive = null;
            //bool? isDeleted = null;
            //bool? includeLastRunAndStats = null;
            //List<long?> ids = null;
            //List<string> names = null;
            //var response = instance.GetProtectionJobs(policyIds, environments, isActive, isDeleted, includeLastRunAndStats, ids, names);
            //Assert.IsInstanceOf<List<ProtectionJob>> (response, "response is List<ProtectionJob>");
        }
        
        /// <summary>
        /// Test RunProtectionJob
        /// </summary>
        [Test]
        public void RunProtectionJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //RunProtectionJobParam body = null;
            //instance.RunProtectionJob(id, body);
            
        }
        
        /// <summary>
        /// Test UpdateProtectionJob
        /// </summary>
        [Test]
        public void UpdateProtectionJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProtectionJobRequestBody body = null;
            //long? id = null;
            //var response = instance.UpdateProtectionJob(body, id);
            //Assert.IsInstanceOf<ProtectionJob> (response, "response is ProtectionJob");
        }
        
    }

}
