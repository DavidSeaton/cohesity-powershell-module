/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RemoteRestoreApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RemoteRestoreApiTests
    {
        private RemoteRestoreApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RemoteRestoreApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RemoteRestoreApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RemoteRestoreApi
            //Assert.IsInstanceOfType(typeof(RemoteRestoreApi), instance, "instance is a RemoteRestoreApi");
        }

        
        /// <summary>
        /// Test CreateRemoteVaultRestoreTask
        /// </summary>
        [Test]
        public void CreateRemoteVaultRestoreTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRemoteVaultRestoreTaskParameters body = null;
            //var response = instance.CreateRemoteVaultRestoreTask(body);
            //Assert.IsInstanceOf<UniversalId> (response, "response is UniversalId");
        }
        
        /// <summary>
        /// Test CreateRemoteVaultSearchJob
        /// </summary>
        [Test]
        public void CreateRemoteVaultSearchJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRemoteVaultSearchJobParameters body = null;
            //var response = instance.CreateRemoteVaultSearchJob(body);
            //Assert.IsInstanceOf<CreatedRemoteVaultSearchJobUid> (response, "response is CreatedRemoteVaultSearchJobUid");
        }
        
        /// <summary>
        /// Test GetRemoteVaultSearchJobResults
        /// </summary>
        [Test]
        public void GetRemoteVaultSearchJobResultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? searchJobId = null;
            //long? clusterId = null;
            //long? clusterIncarnationId = null;
            //string cookie = null;
            //int? pageCount = null;
            //string clusterName = null;
            //var response = instance.GetRemoteVaultSearchJobResults(searchJobId, clusterId, clusterIncarnationId, cookie, pageCount, clusterName);
            //Assert.IsInstanceOf<RemoteVaultSearchJobResults> (response, "response is RemoteVaultSearchJobResults");
        }
        
        /// <summary>
        /// Test ListRemoteVaultRestoreTasks
        /// </summary>
        [Test]
        public void ListRemoteVaultRestoreTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListRemoteVaultRestoreTasks();
            //Assert.IsInstanceOf<List<RemoteVaultRestoreTaskStatus>> (response, "response is List<RemoteVaultRestoreTaskStatus>");
        }
        
        /// <summary>
        /// Test ListRemoteVaultSearchJobById
        /// </summary>
        [Test]
        public void ListRemoteVaultSearchJobByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.ListRemoteVaultSearchJobById(id);
            //Assert.IsInstanceOf<RemoteVaultSearchJobInformation> (response, "response is RemoteVaultSearchJobInformation");
        }
        
        /// <summary>
        /// Test ListRemoteVaultSearchJobs
        /// </summary>
        [Test]
        public void ListRemoteVaultSearchJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListRemoteVaultSearchJobs();
            //Assert.IsInstanceOf<List<RemoteVaultSearchJobInformation>> (response, "response is List<RemoteVaultSearchJobInformation>");
        }
        
        /// <summary>
        /// Test StopRemoteVaultSearchJob
        /// </summary>
        [Test]
        public void StopRemoteVaultSearchJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //StopRemoteVaultSearchJobParameters body = null;
            //instance.StopRemoteVaultSearchJob(body);
            
        }
        
        /// <summary>
        /// Test UploadVaultEncryptionKeys
        /// </summary>
        [Test]
        public void UploadVaultEncryptionKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //List<VaultEncryptionKey> body = null;
            //instance.UploadVaultEncryptionKeys(id, body);
            
        }
        
    }

}
