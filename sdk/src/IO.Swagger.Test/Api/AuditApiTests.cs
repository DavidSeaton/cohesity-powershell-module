/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AuditApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuditApiTests
    {
        private AuditApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuditApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuditApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuditApi
            //Assert.IsInstanceOfType(typeof(AuditApi), instance, "instance is a AuditApi");
        }

        
        /// <summary>
        /// Test SearchClusterAuditLogs
        /// </summary>
        [Test]
        public void SearchClusterAuditLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startIndex = null;
            //long? pageCount = null;
            //List<string> domains = null;
            //List<string> entityTypes = null;
            //List<string> actions = null;
            //string search = null;
            //List<string> userNames = null;
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //string outputFormat = null;
            //var response = instance.SearchClusterAuditLogs(startIndex, pageCount, domains, entityTypes, actions, search, userNames, startTimeUsecs, endTimeUsecs, outputFormat);
            //Assert.IsInstanceOf<ClusterAuditLogsSearchResult> (response, "response is ClusterAuditLogsSearchResult");
        }
        
    }

}
