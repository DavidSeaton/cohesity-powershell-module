/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ReportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ReportsApiTests
    {
        private ReportsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ReportsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ReportsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ReportsApi
            //Assert.IsInstanceOfType(typeof(ReportsApi), instance, "instance is a ReportsApi");
        }

        
        /// <summary>
        /// Test GetDataTransferFromVaultsReportRequest
        /// </summary>
        [Test]
        public void GetDataTransferFromVaultsReportRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? endTimeMsecs = null;
            //List<long?> vaultIds = null;
            //string outputFormat = null;
            //long? startTimeMsecs = null;
            //var response = instance.GetDataTransferFromVaultsReportRequest(endTimeMsecs, vaultIds, outputFormat, startTimeMsecs);
            //Assert.IsInstanceOf<DataTransferFromVaultsSummaryResponse> (response, "response is DataTransferFromVaultsSummaryResponse");
        }
        
        /// <summary>
        /// Test GetDataTransferToVaultsReportRequest
        /// </summary>
        [Test]
        public void GetDataTransferToVaultsReportRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startTimeMsecs = null;
            //long? endTimeMsecs = null;
            //List<long?> vaultIds = null;
            //string outputFormat = null;
            //var response = instance.GetDataTransferToVaultsReportRequest(startTimeMsecs, endTimeMsecs, vaultIds, outputFormat);
            //Assert.IsInstanceOf<DataTransferToVaultsSummaryResponse> (response, "response is DataTransferToVaultsSummaryResponse");
        }
        
        /// <summary>
        /// Test GetProtectionSourcesJobRunsReportRequest
        /// </summary>
        [Test]
        public void GetProtectionSourcesJobRunsReportRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<long?> protectionSourceIds = null;
            //List<string> environments = null;
            //string outputFormat = null;
            //int? pageCount = null;
            //List<string> runStatus = null;
            //List<long?> jobIds = null;
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //var response = instance.GetProtectionSourcesJobRunsReportRequest(protectionSourceIds, environments, outputFormat, pageCount, runStatus, jobIds, startTimeUsecs, endTimeUsecs);
            //Assert.IsInstanceOf<List<ProtectionSourcesJobRunsReportElement>> (response, "response is List<ProtectionSourcesJobRunsReportElement>");
        }
        
        /// <summary>
        /// Test GetProtectionSourcesJobsSummaryReportRequest
        /// </summary>
        [Test]
        public void GetProtectionSourcesJobsSummaryReportRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<long?> protectionSourceIds = null;
            //List<string> statuses = null;
            //string outputFormat = null;
            //long? registeredSourceId = null;
            //List<long?> jobIds = null;
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //List<string> environments = null;
            //var response = instance.GetProtectionSourcesJobsSummaryReportRequest(protectionSourceIds, statuses, outputFormat, registeredSourceId, jobIds, startTimeUsecs, endTimeUsecs, environments);
            //Assert.IsInstanceOf<List<ProtectionSourcesSummaryStats>> (response, "response is List<ProtectionSourcesSummaryStats>");
        }
        
        /// <summary>
        /// Test GetRestoreSummaryByObjectTypeReport
        /// </summary>
        [Test]
        public void GetRestoreSummaryByObjectTypeReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> recoveredFrom = null;
            //string recoverTaskName = null;
            //string status = null;
            //string outputFormat = null;
            //long? startTimeUsecs = null;
            //long? endTimeUsecs = null;
            //string type = null;
            //string userName = null;
            //var response = instance.GetRestoreSummaryByObjectTypeReport(recoveredFrom, recoverTaskName, status, outputFormat, startTimeUsecs, endTimeUsecs, type, userName);
            //Assert.IsInstanceOf<List<RestoreSourceSummaryByObjectTypeElement>> (response, "response is List<RestoreSourceSummaryByObjectTypeElement>");
        }
        
    }

}
