/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Node
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class NodeTests
    {
        // TODO uncomment below to declare an instance variable for Node
        //private Node instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Node
            //instance = new Node();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Node
        /// </summary>
        [Test]
        public void NodeInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Node
            //Assert.IsInstanceOfType<Node> (instance, "variable 'instance' is a Node");
        }


        /// <summary>
        /// Test the property 'CapacityByTier'
        /// </summary>
        [Test]
        public void CapacityByTierTest()
        {
            // TODO unit test for the property 'CapacityByTier'
        }
        /// <summary>
        /// Test the property 'ChassisInfo'
        /// </summary>
        [Test]
        public void ChassisInfoTest()
        {
            // TODO unit test for the property 'ChassisInfo'
        }
        /// <summary>
        /// Test the property 'ClusterPartitionId'
        /// </summary>
        [Test]
        public void ClusterPartitionIdTest()
        {
            // TODO unit test for the property 'ClusterPartitionId'
        }
        /// <summary>
        /// Test the property 'ClusterPartitionName'
        /// </summary>
        [Test]
        public void ClusterPartitionNameTest()
        {
            // TODO unit test for the property 'ClusterPartitionName'
        }
        /// <summary>
        /// Test the property 'DiskCount'
        /// </summary>
        [Test]
        public void DiskCountTest()
        {
            // TODO unit test for the property 'DiskCount'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Ip'
        /// </summary>
        [Test]
        public void IpTest()
        {
            // TODO unit test for the property 'Ip'
        }
        /// <summary>
        /// Test the property 'IsMarkedForRemoval'
        /// </summary>
        [Test]
        public void IsMarkedForRemovalTest()
        {
            // TODO unit test for the property 'IsMarkedForRemoval'
        }
        /// <summary>
        /// Test the property 'MaxPhysicalCapacityBytes'
        /// </summary>
        [Test]
        public void MaxPhysicalCapacityBytesTest()
        {
            // TODO unit test for the property 'MaxPhysicalCapacityBytes'
        }
        /// <summary>
        /// Test the property 'NodeHardwareInfo'
        /// </summary>
        [Test]
        public void NodeHardwareInfoTest()
        {
            // TODO unit test for the property 'NodeHardwareInfo'
        }
        /// <summary>
        /// Test the property 'NodeIncarnationId'
        /// </summary>
        [Test]
        public void NodeIncarnationIdTest()
        {
            // TODO unit test for the property 'NodeIncarnationId'
        }
        /// <summary>
        /// Test the property 'NodeSoftwareVersion'
        /// </summary>
        [Test]
        public void NodeSoftwareVersionTest()
        {
            // TODO unit test for the property 'NodeSoftwareVersion'
        }
        /// <summary>
        /// Test the property 'OfflineMountPathsOfDisks'
        /// </summary>
        [Test]
        public void OfflineMountPathsOfDisksTest()
        {
            // TODO unit test for the property 'OfflineMountPathsOfDisks'
        }
        /// <summary>
        /// Test the property 'RemovalState'
        /// </summary>
        [Test]
        public void RemovalStateTest()
        {
            // TODO unit test for the property 'RemovalState'
        }
        /// <summary>
        /// Test the property 'Stats'
        /// </summary>
        [Test]
        public void StatsTest()
        {
            // TODO unit test for the property 'Stats'
        }
        /// <summary>
        /// Test the property 'SystemDisks'
        /// </summary>
        [Test]
        public void SystemDisksTest()
        {
            // TODO unit test for the property 'SystemDisks'
        }

    }

}
