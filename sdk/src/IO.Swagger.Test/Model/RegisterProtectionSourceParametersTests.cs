/* 
 * Cohesity REST API
 *
 * This API provides operations for interfacing with the Cohesity Cluster. NOTE: To view the documentation on the responses, click 'Model' next to 'Example Value' and keep clicking to expand the hierarchy.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RegisterProtectionSourceParameters
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RegisterProtectionSourceParametersTests
    {
        // TODO uncomment below to declare an instance variable for RegisterProtectionSourceParameters
        //private RegisterProtectionSourceParameters instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of RegisterProtectionSourceParameters
            //instance = new RegisterProtectionSourceParameters();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RegisterProtectionSourceParameters
        /// </summary>
        [Test]
        public void RegisterProtectionSourceParametersInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" RegisterProtectionSourceParameters
            //Assert.IsInstanceOfType<RegisterProtectionSourceParameters> (instance, "variable 'instance' is a RegisterProtectionSourceParameters");
        }


        /// <summary>
        /// Test the property 'Endpoint'
        /// </summary>
        [Test]
        public void EndpointTest()
        {
            // TODO unit test for the property 'Endpoint'
        }
        /// <summary>
        /// Test the property 'Environment'
        /// </summary>
        [Test]
        public void EnvironmentTest()
        {
            // TODO unit test for the property 'Environment'
        }
        /// <summary>
        /// Test the property 'ForceRegister'
        /// </summary>
        [Test]
        public void ForceRegisterTest()
        {
            // TODO unit test for the property 'ForceRegister'
        }
        /// <summary>
        /// Test the property 'HostType'
        /// </summary>
        [Test]
        public void HostTypeTest()
        {
            // TODO unit test for the property 'HostType'
        }
        /// <summary>
        /// Test the property 'NasMountCredentials'
        /// </summary>
        [Test]
        public void NasMountCredentialsTest()
        {
            // TODO unit test for the property 'NasMountCredentials'
        }
        /// <summary>
        /// Test the property 'NetappType'
        /// </summary>
        [Test]
        public void NetappTypeTest()
        {
            // TODO unit test for the property 'NetappType'
        }
        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Test]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }
        /// <summary>
        /// Test the property 'PhysicalType'
        /// </summary>
        [Test]
        public void PhysicalTypeTest()
        {
            // TODO unit test for the property 'PhysicalType'
        }
        /// <summary>
        /// Test the property 'PureType'
        /// </summary>
        [Test]
        public void PureTypeTest()
        {
            // TODO unit test for the property 'PureType'
        }
        /// <summary>
        /// Test the property 'SourceSideDedupEnabled'
        /// </summary>
        [Test]
        public void SourceSideDedupEnabledTest()
        {
            // TODO unit test for the property 'SourceSideDedupEnabled'
        }
        /// <summary>
        /// Test the property 'ThrottlingPolicy'
        /// </summary>
        [Test]
        public void ThrottlingPolicyTest()
        {
            // TODO unit test for the property 'ThrottlingPolicy'
        }
        /// <summary>
        /// Test the property 'ThrottlingPolicyOverrides'
        /// </summary>
        [Test]
        public void ThrottlingPolicyOverridesTest()
        {
            // TODO unit test for the property 'ThrottlingPolicyOverrides'
        }
        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Test]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'VmwareType'
        /// </summary>
        [Test]
        public void VmwareTypeTest()
        {
            // TODO unit test for the property 'VmwareType'
        }

    }

}
